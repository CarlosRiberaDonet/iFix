/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.components.clientes;

import controller.ReparacionController;
import entity.Cliente;
import entity.Reparacion;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import listeners.ReparacionTableMouseListener;
import ui.components.reparaciones.CrearReparacion;
import ui.components.reparaciones.ReparacionDetallesFrame;
import utils.Utils;

/**
 *
 * @author Carlos Ribera
 */
public class ClienteReparacionesFrame extends javax.swing.JFrame {

    /**
     * Creates new form ClienteReparacionesFrame
     */
    
    private Cliente cliente;
    private List<Reparacion> reparacionesList = new ArrayList<>();
    
    public ClienteReparacionesFrame(Cliente cliente, List<Reparacion> reparacionesList) {
        initComponents();
        this.reparacionesList = reparacionesList;
        setResizable(false);
        cargarTabla(reparacionesList);
        this.cliente = cliente;
        clienteLabel.setText(cliente.getNombre().toUpperCase() + " " + cliente.getApellidos().toUpperCase());
        telefonoLabel.setText(cliente.getTelefono());
        direccionLabel.setText(cliente.getDireccion().toUpperCase());
        
        if(reparacionesList.isEmpty()){
            modificarButton.setEnabled(false);
            eliminarButton.setEnabled(false);
        }
    }

    public void cargarTabla(List<Reparacion> reparacionesList){
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yy");
        
        // Crear el modelo de la tabla con las columnas
        DefaultTableModel modelo = new DefaultTableModel(new Object[][] {}, new String[] {
            "ID", "ENTRADA", "SALIDA", "DISPOSITIVO", "REPARACION", "ESTADO", "IMPORTE"
        }) {
        // Sobrescribir el método isCellEditable para hacer que ninguna celda sea editable
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Ninguna celda será editable
            }
        };    
        for(Reparacion r : reparacionesList){
            String fechaEntrada = r.getFechaEntrada().format(formatter);
            String fechaSalida = r.getFechaSalida().format(formatter);
            modelo.addRow(new Object[]
            {
                r.getId(),
                fechaEntrada,
                fechaSalida,
                r.getIdDispositivo(),
                r.getEstado(),
                r.getPrecioReparacion()
            });
        }
        
        // Asignar el modelo a la tabla
        reparacionesTable.setModel(modelo);
        // Oculto la columna ID
        reparacionesTable.getColumnModel().getColumn(0).setMinWidth(0);
        reparacionesTable.getColumnModel().getColumn(0).setMaxWidth(0);
        reparacionesTable.getColumnModel().getColumn(0).setWidth(0);
    
        // Agregar el MouseListener a la tabla
        reparacionesTable.addMouseListener(new ReparacionTableMouseListener(reparacionesTable, reparacionesList));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        clienteLabel = new javax.swing.JLabel();
        modificarButton = new javax.swing.JButton();
        añadirButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        reparacionesTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        telefonoLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        direccionLabel = new javax.swing.JLabel();
        menuClientesButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        actualizarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("REPARACIONES");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Cliente:");

        clienteLabel.setText("jLabel2");

        modificarButton.setText("Modificar");
        modificarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarButtonActionPerformed(evt);
            }
        });

        añadirButton.setText("Añadir");
        añadirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirButtonActionPerformed(evt);
            }
        });

        eliminarButton.setText("Eliminar");
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        reparacionesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        reparacionesTable.setFocusable(false);
        jScrollPane1.setViewportView(reparacionesTable);

        jLabel2.setText("REPARACIONES");

        jLabel3.setText("Teléfono:");

        telefonoLabel.setText("jLabel4");

        jLabel5.setText("Dirección:");

        direccionLabel.setText("jLabel6");

        menuClientesButton.setText("Menú Clientes");
        menuClientesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuClientesButtonActionPerformed(evt);
            }
        });

        actualizarButton.setText("Actualizar Lista");
        actualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(telefonoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(direccionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(actualizarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(añadirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(modificarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(menuClientesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteLabel)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(telefonoLabel)
                    .addComponent(jLabel5)
                    .addComponent(direccionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actualizarButton)
                    .addComponent(añadirButton)
                    .addComponent(eliminarButton)
                    .addComponent(modificarButton)
                    .addComponent(menuClientesButton))
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void añadirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirButtonActionPerformed
        JFrame frame = new JFrame("Crear Reparación");
        frame.setContentPane(new CrearReparacion(cliente));
        frame.pack();
        frame.setSize(800, 600);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }//GEN-LAST:event_añadirButtonActionPerformed

    private void menuClientesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuClientesButtonActionPerformed
        dispose();
    }//GEN-LAST:event_menuClientesButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        
        if(Utils.confirmationMessage("ELIMINAR", "ELIMINAR REPARACIÓN")){
             int filaSelect = reparacionesTable.getSelectedRow();
            if(filaSelect >= 0){
                int idReparacion = (int) reparacionesTable.getValueAt(filaSelect, 0);    
                if(ReparacionController.eliminarReparacion(idReparacion)){
                    JOptionPane.showMessageDialog(this, "Reparación eliminada correctamente.","ÉXITO",  JOptionPane.INFORMATION_MESSAGE); 
                    reparacionesList.clear();
                    reparacionesList = ReparacionController.findReparacionesByIdCliente(cliente.getId());
                    cargarTabla(reparacionesList);
                }
            } else{
                JOptionPane.showMessageDialog(this, "No se ha podido eliminar la reparación.","ERROR",  JOptionPane.ERROR_MESSAGE);
            }
        }   
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void modificarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarButtonActionPerformed
        // Obtener el índice de la fila seleccionada en la vista de la tabla
        int filaSelect = reparacionesTable.getSelectedRow();

        // Verificar que se haya seleccionado alguna fila
        if (filaSelect >= 0) {
            // Convertir el índice de la vista al índice real del modelo de datos
            int modelIndex = reparacionesTable.convertRowIndexToModel(filaSelect);

            // Obtener el ID de la reparación seleccionada
//            int idReparacion = (int) reparacionesTable.getValueAt(filaSelect, 0);

            // Obtener el objeto Reparacion correspondiente de la lista de datos
            Reparacion reparacionSelect = reparacionesList.get(modelIndex);

            // Crear y mostrar la ventana de detalles para la reparación seleccionada
            ReparacionDetallesFrame frame = new ReparacionDetallesFrame(reparacionSelect);
            frame.setLocationRelativeTo(null); // Centrar la ventana en la pantalla
            frame.setVisible(true);            // Mostrar la ventana
        }
    }//GEN-LAST:event_modificarButtonActionPerformed

    private void actualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarButtonActionPerformed
        reparacionesList = ReparacionController.findReparacionesByIdCliente(cliente.getId());
        cargarTabla(reparacionesList);
    }//GEN-LAST:event_actualizarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteReparacionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteReparacionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteReparacionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteReparacionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarButton;
    private javax.swing.JButton añadirButton;
    private javax.swing.JLabel clienteLabel;
    private javax.swing.JLabel direccionLabel;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton menuClientesButton;
    private javax.swing.JButton modificarButton;
    private javax.swing.JTable reparacionesTable;
    private javax.swing.JLabel telefonoLabel;
    // End of variables declaration//GEN-END:variables
}
